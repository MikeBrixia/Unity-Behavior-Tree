### YamlMime:ManagedReference
items:
- uid: BT.Runtime.BT_Node
  commentId: T:BT.Runtime.BT_Node
  id: BT_Node
  parent: BT.Runtime
  children:
  - BT.Runtime.BT_Node.Execute
  - BT.Runtime.BT_Node.ExecuteNode
  - BT.Runtime.BT_Node.OnStart
  - BT.Runtime.BT_Node.OnStop
  - BT.Runtime.BT_Node.blackboard
  - BT.Runtime.BT_Node.isStarted
  langs:
  - csharp
  - vb
  name: BT_Node
  nameWithType: BT_Node
  fullName: BT.Runtime.BT_Node
  type: Class
  source:
    remote:
      path: Runtime/BT_Node.cs
      branch: main
      repo: https://github.com/MikeBrixia/Unity-Behavior-Tree.git
    id: BT_Node
    path: ../Runtime/BT_Node.cs
    startLine: 10
  namespace: BT.Runtime
  summary: >-
    Base class for all behavior tree nodes which

    contains the base logic for how a behavior tree

    node should behave.
  example: []
  syntax:
    content: 'public abstract class BT_Node : NodeBase'
    content.vb: Public MustInherit Class BT_Node Inherits NodeBase
  inheritance:
  - System.Object
  - BT.Runtime.NodeBase
  derivedClasses:
  - BT.Runtime.BT_ActionNode
  - BT.Runtime.BT_CompositeNode
  - BT.Runtime.BT_Decorator
  - BT.Runtime.BT_Service
  inheritedMembers:
  - BT.Runtime.NodeBase.nodeName
  - BT.Runtime.NodeBase.nodeTypeName
  - BT.Runtime.NodeBase.description
  - BT.Runtime.NodeBase.position
  - BT.Runtime.NodeBase.state
  - BT.Runtime.NodeBase.Clone
- uid: BT.Runtime.BT_Node.blackboard
  commentId: P:BT.Runtime.BT_Node.blackboard
  id: blackboard
  parent: BT.Runtime.BT_Node
  langs:
  - csharp
  - vb
  name: blackboard
  nameWithType: BT_Node.blackboard
  fullName: BT.Runtime.BT_Node.blackboard
  type: Property
  source:
    remote:
      path: Runtime/BT_Node.cs
      branch: main
      repo: https://github.com/MikeBrixia/Unity-Behavior-Tree.git
    id: blackboard
    path: ../Runtime/BT_Node.cs
    startLine: 13
  namespace: BT.Runtime
  syntax:
    content: public Blackboard blackboard { get; set; }
    parameters: []
    return:
      type: BT.Runtime.Blackboard
    content.vb: Public Property blackboard As Blackboard
  overload: BT.Runtime.BT_Node.blackboard*
- uid: BT.Runtime.BT_Node.isStarted
  commentId: F:BT.Runtime.BT_Node.isStarted
  id: isStarted
  parent: BT.Runtime.BT_Node
  langs:
  - csharp
  - vb
  name: isStarted
  nameWithType: BT_Node.isStarted
  fullName: BT.Runtime.BT_Node.isStarted
  type: Field
  source:
    remote:
      path: Runtime/BT_Node.cs
      branch: main
      repo: https://github.com/MikeBrixia/Unity-Behavior-Tree.git
    id: isStarted
    path: ../Runtime/BT_Node.cs
    startLine: 16
  namespace: BT.Runtime
  syntax:
    content: public bool isStarted
    return:
      type: System.Boolean
    content.vb: Public isStarted As Boolean
- uid: BT.Runtime.BT_Node.OnStart
  commentId: M:BT.Runtime.BT_Node.OnStart
  id: OnStart
  parent: BT.Runtime.BT_Node
  langs:
  - csharp
  - vb
  name: OnStart()
  nameWithType: BT_Node.OnStart()
  fullName: BT.Runtime.BT_Node.OnStart()
  type: Method
  source:
    remote:
      path: Runtime/BT_Node.cs
      branch: main
      repo: https://github.com/MikeBrixia/Unity-Behavior-Tree.git
    id: OnStart
    path: ../Runtime/BT_Node.cs
    startLine: 41
  namespace: BT.Runtime
  summary: Called when this node has started it's execution
  example: []
  syntax:
    content: protected abstract void OnStart()
    content.vb: Protected MustOverride Sub OnStart()
  overload: BT.Runtime.BT_Node.OnStart*
- uid: BT.Runtime.BT_Node.OnStop
  commentId: M:BT.Runtime.BT_Node.OnStop
  id: OnStop
  parent: BT.Runtime.BT_Node
  langs:
  - csharp
  - vb
  name: OnStop()
  nameWithType: BT_Node.OnStop()
  fullName: BT.Runtime.BT_Node.OnStop()
  type: Method
  source:
    remote:
      path: Runtime/BT_Node.cs
      branch: main
      repo: https://github.com/MikeBrixia/Unity-Behavior-Tree.git
    id: OnStop
    path: ../Runtime/BT_Node.cs
    startLine: 46
  namespace: BT.Runtime
  summary: Called when this node has succeded or failed it's execution
  example: []
  syntax:
    content: protected abstract void OnStop()
    content.vb: Protected MustOverride Sub OnStop()
  overload: BT.Runtime.BT_Node.OnStop*
- uid: BT.Runtime.BT_Node.Execute
  commentId: M:BT.Runtime.BT_Node.Execute
  id: Execute
  parent: BT.Runtime.BT_Node
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: BT_Node.Execute()
  fullName: BT.Runtime.BT_Node.Execute()
  type: Method
  source:
    remote:
      path: Runtime/BT_Node.cs
      branch: main
      repo: https://github.com/MikeBrixia/Unity-Behavior-Tree.git
    id: Execute
    path: ../Runtime/BT_Node.cs
    startLine: 54
  namespace: BT.Runtime
  summary: >-
    Called when the behavior tree wants to execute this node. 

    Put here all the code you want this node to execute.
  example: []
  syntax:
    content: public abstract EBehaviorTreeState Execute()
    return:
      type: BT.Runtime.EBehaviorTreeState
      description: >-
        SUCCESS if this node has been executed successfully, RUNNING if is still executing
            and FAILED if the node has failed to execute it's tasks.
    content.vb: Public MustOverride Function Execute() As EBehaviorTreeState
  overload: BT.Runtime.BT_Node.Execute*
- uid: BT.Runtime.BT_Node.ExecuteNode
  commentId: M:BT.Runtime.BT_Node.ExecuteNode
  id: ExecuteNode
  parent: BT.Runtime.BT_Node
  langs:
  - csharp
  - vb
  name: ExecuteNode()
  nameWithType: BT_Node.ExecuteNode()
  fullName: BT.Runtime.BT_Node.ExecuteNode()
  type: Method
  source:
    remote:
      path: Runtime/BT_Node.cs
      branch: main
      repo: https://github.com/MikeBrixia/Unity-Behavior-Tree.git
    id: ExecuteNode
    path: ../Runtime/BT_Node.cs
    startLine: 63
  namespace: BT.Runtime
  summary: >-
    Called when the Behavior Tree wants to execute this node, 

    if not already started this node will start it's execution and

    call OnStart_Internal(), then it will execute this node instructions and 

    if the result was Success or Failed it will call OnStop_Internal().
  example: []
  syntax:
    content: public virtual EBehaviorTreeState ExecuteNode()
    return:
      type: BT.Runtime.EBehaviorTreeState
      description: The result of this node
    content.vb: Public Overridable Function ExecuteNode() As EBehaviorTreeState
  overload: BT.Runtime.BT_Node.ExecuteNode*
references:
- uid: BT.Runtime
  commentId: N:BT.Runtime
  href: BT.html
  name: BT.Runtime
  nameWithType: BT.Runtime
  fullName: BT.Runtime
  spec.csharp:
  - uid: BT
    name: BT
    href: BT.html
  - name: .
  - uid: BT.Runtime
    name: Runtime
    href: BT.Runtime.html
  spec.vb:
  - uid: BT
    name: BT
    href: BT.html
  - name: .
  - uid: BT.Runtime
    name: Runtime
    href: BT.Runtime.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: BT.Runtime.NodeBase
  commentId: T:BT.Runtime.NodeBase
  parent: BT.Runtime
  href: BT.Runtime.NodeBase.html
  name: NodeBase
  nameWithType: NodeBase
  fullName: BT.Runtime.NodeBase
- uid: BT.Runtime.NodeBase.nodeName
  commentId: F:BT.Runtime.NodeBase.nodeName
  parent: BT.Runtime.NodeBase
  href: BT.Runtime.NodeBase.html#BT_Runtime_NodeBase_nodeName
  name: nodeName
  nameWithType: NodeBase.nodeName
  fullName: BT.Runtime.NodeBase.nodeName
- uid: BT.Runtime.NodeBase.nodeTypeName
  commentId: F:BT.Runtime.NodeBase.nodeTypeName
  parent: BT.Runtime.NodeBase
  href: BT.Runtime.NodeBase.html#BT_Runtime_NodeBase_nodeTypeName
  name: nodeTypeName
  nameWithType: NodeBase.nodeTypeName
  fullName: BT.Runtime.NodeBase.nodeTypeName
- uid: BT.Runtime.NodeBase.description
  commentId: F:BT.Runtime.NodeBase.description
  parent: BT.Runtime.NodeBase
  href: BT.Runtime.NodeBase.html#BT_Runtime_NodeBase_description
  name: description
  nameWithType: NodeBase.description
  fullName: BT.Runtime.NodeBase.description
- uid: BT.Runtime.NodeBase.position
  commentId: F:BT.Runtime.NodeBase.position
  parent: BT.Runtime.NodeBase
  href: BT.Runtime.NodeBase.html#BT_Runtime_NodeBase_position
  name: position
  nameWithType: NodeBase.position
  fullName: BT.Runtime.NodeBase.position
- uid: BT.Runtime.NodeBase.state
  commentId: F:BT.Runtime.NodeBase.state
  parent: BT.Runtime.NodeBase
  href: BT.Runtime.NodeBase.html#BT_Runtime_NodeBase_state
  name: state
  nameWithType: NodeBase.state
  fullName: BT.Runtime.NodeBase.state
- uid: BT.Runtime.NodeBase.Clone
  commentId: M:BT.Runtime.NodeBase.Clone
  parent: BT.Runtime.NodeBase
  href: BT.Runtime.NodeBase.html#BT_Runtime_NodeBase_Clone
  name: Clone()
  nameWithType: NodeBase.Clone()
  fullName: BT.Runtime.NodeBase.Clone()
  spec.csharp:
  - uid: BT.Runtime.NodeBase.Clone
    name: Clone
    href: BT.Runtime.NodeBase.html#BT_Runtime_NodeBase_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: BT.Runtime.NodeBase.Clone
    name: Clone
    href: BT.Runtime.NodeBase.html#BT_Runtime_NodeBase_Clone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BT.Runtime.BT_Node.blackboard*
  commentId: Overload:BT.Runtime.BT_Node.blackboard
  href: BT.Runtime.BT_Node.html#BT_Runtime_BT_Node_blackboard
  name: blackboard
  nameWithType: BT_Node.blackboard
  fullName: BT.Runtime.BT_Node.blackboard
- uid: BT.Runtime.Blackboard
  commentId: T:BT.Runtime.Blackboard
  parent: BT.Runtime
  href: BT.Runtime.Blackboard.html
  name: Blackboard
  nameWithType: Blackboard
  fullName: BT.Runtime.Blackboard
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BT.Runtime.BT_Node.OnStart*
  commentId: Overload:BT.Runtime.BT_Node.OnStart
  href: BT.Runtime.BT_Node.html#BT_Runtime_BT_Node_OnStart
  name: OnStart
  nameWithType: BT_Node.OnStart
  fullName: BT.Runtime.BT_Node.OnStart
- uid: BT.Runtime.BT_Node.OnStop*
  commentId: Overload:BT.Runtime.BT_Node.OnStop
  href: BT.Runtime.BT_Node.html#BT_Runtime_BT_Node_OnStop
  name: OnStop
  nameWithType: BT_Node.OnStop
  fullName: BT.Runtime.BT_Node.OnStop
- uid: BT.Runtime.BT_Node.Execute*
  commentId: Overload:BT.Runtime.BT_Node.Execute
  href: BT.Runtime.BT_Node.html#BT_Runtime_BT_Node_Execute
  name: Execute
  nameWithType: BT_Node.Execute
  fullName: BT.Runtime.BT_Node.Execute
- uid: BT.Runtime.EBehaviorTreeState
  commentId: T:BT.Runtime.EBehaviorTreeState
  parent: BT.Runtime
  href: BT.Runtime.EBehaviorTreeState.html
  name: EBehaviorTreeState
  nameWithType: EBehaviorTreeState
  fullName: BT.Runtime.EBehaviorTreeState
- uid: BT.Runtime.BT_Node.ExecuteNode*
  commentId: Overload:BT.Runtime.BT_Node.ExecuteNode
  href: BT.Runtime.BT_Node.html#BT_Runtime_BT_Node_ExecuteNode
  name: ExecuteNode
  nameWithType: BT_Node.ExecuteNode
  fullName: BT.Runtime.BT_Node.ExecuteNode
